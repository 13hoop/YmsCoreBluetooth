{"name":"YmsCoreBluetooth","tagline":"A framework for working with CoreBluetooth. Includes Deanna, an iOS application using YmsCoreBluetooth to communicate with a TI SensorTag.","body":"# YmsCoreBluetooth 0.91 (beta)\r\nA framework for building Bluetooth 4.0 Low Energy (aka Smart or LE) iOS applications using the CoreBluetooth API. Includes Deanna, an iOS application using YmsCoreBluetooth to communicate with a [TI SensorTag](http://processors.wiki.ti.com/index.php/Bluetooth_SensorTag).\r\n\r\n[YmsCoreBluetooth API Reference](http://kickingvegas.github.io/YmsCoreBluetooth/appledoc/index.html)\r\n\r\n## File Naming Conventions\r\n\r\nThe YmsCoreBluetooth framework is the set of files prefixed with `YMSCB` located in the directory `YmsCoreBluetooth`.\r\n\r\nThe files for the iOS application **Deanna** are prefixed with `DEA` located in the directory `Deanna`.\r\n\r\n## Organizational Structure & Operation\r\n\r\nThe organizational structure of the YmsCoreBluetooth framework largely mirrors the CoreBluetooth hierarchy:\r\n\r\n* YMSCBAppService - An application service which manages multiple BLE peripherals\r\n    * YMSCBPeripheral - A BLE peripheral can have multiple BLE services\r\n        * YMSCBService - A BLE service can have multiple BLE characteristics\r\n             * YMSCBCharacteristic \r\n\t     \r\n\t     \r\nWith CoreBluetooth, the API to issue read and write requests to a BLE peripheral is accomplished through the CBPeripheral class and the responses sent back are handled via CBPeripheralDelegate methods. For a BLE peripheral with multiple services, this approach requires the developer to write code to manage read/write requests to different services.\r\n        \r\nYmsCoreBluetooth framework offers iOS developers a more natural API that is BLE service-centric: **read and write requests to a BLE peripheral are done from the point of view of a BLE service**. Responses can be handled using a callback block or via a notification handler method.\r\n\r\n## Writing your own Bluetooth LE service with YmsCoreBluetooth\r\n\r\nLearn how to write your own Bluetooth LE service by reading the example of how its done for the TI SensorTag in the [Tutorial](http://kickingvegas.github.io/YmsCoreBluetooth/appledoc/docs/tutorial/Tutorial.html).\r\n\r\n## Questions\r\n\r\nWhile quite functional, YmsCoreBluetooth is still very much in an early state and there's always room for improvement. Please submit any questions or [issues to the GitHub project for YmsCoreBluetooth](https://github.com/kickingvegas/YmsCoreBluetooth/issues?labels=&milestone=&page=1&state=open).\r\n\r\n\r\n## Notes\r\n\r\nCode tested on:\r\n\r\n* iPhone 4S, iOS 6.1.3\r\n* TI SensorTag firmware 1.2, 1.3.\r\n\r\n## Known Issues\r\n* No support is offered for the iOS simulator due to the instability of the CoreBluetooth implementation on it. Use this code only on iOS hardware that supports CoreBluetooth. Given that Apple does not provide technical support for CoreBluetooth behavior on the iOS simulator [TN2295](http://developer.apple.com/library/ios/#technotes/tn2295/_index.html), I feel this is a reasonable position to take. Hopefully in time the iOS simulator will exhibit better CoreBluetooth fidelity.\r\n\r\n## Changes\r\n### Tue May 7 2013\r\n* Bugfixes: #41, #42\r\n\r\n### Mon May 6 2013\r\n* Issue #19 - First draft of Tutorial written\r\n* Added initial support for launching a local notification when *Deanna* app in the background. The view controller for the SensorTag must be presented before going into the background for local notifications to work.\r\n\r\n### Wed May 2 2013\r\n* Issue #34 - Updated YmsCoreBluetooth Documentation\r\n\r\n### Wed May 1 2013\r\n* Improved API for reads and writes using either blocks or notifications.\r\n* Issue #12 - Callback blocks for service requests implemented.\r\n* Issue #22 - Support for reading SensorTag device info implemented.\r\n* Issue #24 - API version implemented.\r\n* Bugfix #31 - Remove all UI dependencies in YmsCoreBluetooth. Handling CBCentralManager state is an application UX issue.\r\n\r\n### Fri Apr 26 2013\r\n* Bugfix #21 - YMSCBService now supports constructor with 128-bit base address.\r\n* Issue #23 - Moved SensorTag specific methods (`requestConfig`, `responseConfig`, `turnOn`, `turnOff`) from YMSCBService.\r\n\r\n### Wed Apr 24 2013\r\n* Bugfix #5 to support multiple SensorTags is now in. With many thanks to Texas Instruments, a second SensorTag was donated to YmsCoreBluetooth to test for multiple peripherals.\r\n* Support for deleting discovered peripherals is in.\r\n* Support for discovering unknown peripherals is in.\r\n\r\n### Sat Apr 20 2013\r\n* Bugfix #15 where connect button is blocked when scanning.\r\n* Bugfixes on handling peripheral disconnects.\r\n\r\n### Thu Apr 18 2013 - Major Revision\r\n* Refactored `DECBAppService` to support:\r\n    * Separation of peripheral discovery by scanning from peripheral retrieval via stored UUID.\r\n    * Removed `NSNotification` messages to use `CBCentralManagerDelegate` methods instead.\r\n* Reorganized physical file directory structure to match that of Xcode project group structure.\r\n* Added RSSI display to both peripheral screen and SensorTag screen.\r\n* Added connect button per peripherals discovered.\r\n* Initial support for multiple SensorTags. (This has not yet been tested, due to the fact that I have only 1 SensorTag to test.)\r\n\r\n### Sun Mar 3 2013\r\n* First stable release.\r\n* Support for communication with all sensors/services on a SensorTag.\r\n* Initial documentation for YmsCoreBluetooth API and Deanna source code.\r\n\r\n\r\n### License\r\n\r\n    Copyright 2013 Yummy Melon Software LLC\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n\r\n    Author: Charles Y. Choi <charles.choi@yummymelon.com>\r\n\r\n\r\n\r\n\r\n\r\n","google":"UA-9829097-6","note":"Don't delete this file! It's used internally to help with page regeneration."}